{"version":3,"file":"static/js/998.9da67b27.chunk.js","mappings":"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","sources":["components/LoadingSpinner.tsx","components/Header.tsx","pages/IngredientRecommendationPage.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  color?: string;\r\n  message?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \r\n  size = 'md', \r\n  color = 'white',\r\n  message\r\n}) => {\r\n  const textSize = {\r\n    sm: 'text-sm',\r\n    md: 'text-base',\r\n    lg: 'text-xl'\r\n  };\r\n  \r\n  const dotSize = {\r\n    sm: '8px',\r\n    md: '10px',\r\n    lg: '12px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 flex flex-col items-center justify-center\">\r\n      <div className=\"flex flex-col items-center\">\r\n        {/* Bouncing dots animation only */}\r\n        <div className=\"flex space-x-3\">\r\n          {[...Array(3)].map((_, i) => (\r\n            <div \r\n              key={i} \r\n              className={`bg-${color} rounded-full animate-bounce`}\r\n              style={{ \r\n                width: dotSize[size],\r\n                height: dotSize[size],\r\n                animationDelay: `${i * 0.1}s`\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        \r\n        {message && (\r\n          <div className={`mt-4 text-${color} ${textSize[size]} font-medium loading-dots`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(LoadingSpinner)","\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\n\r\ninterface HeaderProps {\r\n  showMenu?: boolean\r\n}\r\n\r\nconst Header = ({ showMenu = true }: HeaderProps) => {\r\n  const { user, logout } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuRef = useRef<HTMLDivElement>(null) // Add ref for the menu container\r\n\r\n  // Determine current path\r\n  const currentPath = location.pathname\r\n\r\n  // Handle clicks outside the menu\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setIsMenuOpen(false)\r\n      }\r\n    }\r\n\r\n    // Add event listener when menu is open\r\n    if (isMenuOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n\r\n    // Clean up event listener\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n  }, [isMenuOpen])\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMenu && (\r\n        <div ref={menuRef}>\r\n          <button \r\n            onClick={toggleMenu} \r\n            className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center shadow-md\"\r\n            aria-label=\"Menu\"\r\n            title=\"Menu\"\r\n          >\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className=\"h-6 w-6 text-gray-500\" \r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {isMenuOpen && (\r\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-20\">\r\n              <div className=\"px-4 py-2 text-sm text-gray-700\">Hi, {user?.username || \"Guest\"}</div>\r\n              <hr className=\"my-1\" />\r\n              \r\n              {/* Show Home button only if not on homepage */}\r\n              {currentPath !== \"/home\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/home\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Home\r\n                </button>\r\n              )}\r\n              \r\n              {/* Show Profile button only if not on profile page */}\r\n              {currentPath !== \"/profile\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/profile\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Profile\r\n                </button>\r\n              )}\r\n              \r\n              {/* Always show Search by Ingredient unless on that page */}\r\n              {currentPath !== \"/ingredient-recommendations\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/ingredient-recommendations\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Search by Ingredient\r\n                </button>\r\n              )}\r\n              \r\n              <hr className=\"my-1\" />\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  navigate(\"/\")\r\n                  setIsMenuOpen(false)\r\n                }}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import { useState, useEffect, useCallback, useRef } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport Header from \"../components/Header\"\r\nimport { recipes as recipesApi } from \"../services/api\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\"\r\nimport { ApiRecipe } from \"../types/api\"\r\n\r\ninterface RecipeResult {\r\n  id: string;\r\n  title: string;\r\n  image?: string;\r\n  isFavorite: boolean;\r\n}\r\n\r\ninterface Substitution {\r\n  ingredient: string;\r\n  substitutes: string[];\r\n}\r\n\r\ninterface AlmostMatchingRecipe {\r\n  recipe: ApiRecipe;\r\n  missing_ingredients: string[];\r\n  substitutions: Substitution[];\r\n  missing_count: number;\r\n}\r\n\r\nconst IngredientRecommendationPage = () => {\r\n  const { isAuthenticated, isLoading } = useAuth()\r\n  const navigate = useNavigate()\r\n  const modalRef = useRef<HTMLDivElement>(null)\r\n  \r\n  // State variables\r\n  const [ingredientsInput, setIngredientsInput] = useState(\"\")\r\n  const [recipeResults, setRecipeResults] = useState<RecipeResult[]>([])\r\n  const [almostMatchingRecipes, setAlmostMatchingRecipes] = useState<AlmostMatchingRecipe[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [activeTab, setActiveTab] = useState<'exact' | 'almost'>('exact')\r\n  const [expandedSubstitutions, setExpandedSubstitutions] = useState<Record<string, boolean>>({})\r\n\r\n  // Redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!isLoading && !isAuthenticated) {\r\n      navigate(\"/login\")\r\n    }\r\n  }, [isAuthenticated, navigate, isLoading])\r\n\r\n  // Handle click outside modal to close it\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {\r\n        setShowModal(false)\r\n      }\r\n    }\r\n\r\n    if (showModal) {\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [showModal])\r\n\r\n  // Toggle substitution expansion\r\n  const toggleSubstitution = (recipeId: string) => {\r\n    setExpandedSubstitutions(prev => ({\r\n      ...prev,\r\n      [recipeId]: !prev[recipeId]\r\n    }))\r\n  }\r\n\r\n  // Handle ingredient search submission\r\n  const handleSearchSubmit = useCallback(async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!ingredientsInput.trim()) return\r\n    \r\n    setLoading(true)\r\n    \r\n    try {\r\n      // Fetch exact matching recipes\r\n      const exactMatchResponse = await recipesApi.searchByIngredients(ingredientsInput.trim())\r\n      \r\n      const recipes = exactMatchResponse.data.map((recipe: ApiRecipe) => ({\r\n        id: recipe.recipe_id,\r\n        title: recipe.title,\r\n        image: recipe.image_url,\r\n        isFavorite: recipe.isFavorite\r\n      }))\r\n      \r\n      setRecipeResults(recipes)\r\n      \r\n      // Fetch almost matching recipes with substitution suggestions\r\n      const almostMatchResponse = await recipesApi.getAlmostMatchingRecipes(\r\n        ingredientsInput.trim(),\r\n        2, // Max 2 missing ingredients\r\n        10 // Limit to 10 results\r\n      )\r\n      \r\n      setAlmostMatchingRecipes(almostMatchResponse.data)\r\n      \r\n      // Show results\r\n      setShowModal(true)\r\n      \r\n      // Default to showing exact matches if available, otherwise show almost-matching\r\n      setActiveTab(recipes.length > 0 ? 'exact' : 'almost')\r\n    } catch (error) {\r\n      console.error(\"Error searching recipes by ingredients:\", error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [ingredientsInput])\r\n\r\n  // Handle recipe selection\r\n  const handleRecipeClick = useCallback((recipeId: string) => {\r\n    navigate(`/recipe/${recipeId}`)\r\n  }, [navigate])\r\n\r\n  // Render the modal with recipe results\r\n  const renderRecipeModal = () => {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50 p-4\">\r\n        <div ref={modalRef} className=\"bg-white rounded-3xl w-full max-w-2xl px-6 py-8 shadow-xl\">\r\n          <h2 className=\"text-xl font-medium text-center mb-6 text-gray-700\">Possible Recipes With Your Ingredients</h2>\r\n          \r\n          {/* Tabs */}\r\n          <div className=\"flex border-b border-gray-200 mb-6\">\r\n            <button\r\n              className={`flex-1 py-2 px-4 text-center ${activeTab === 'exact' ? 'border-b-2 border-red-500 text-red-500 font-medium' : 'text-gray-500'}`}\r\n              onClick={() => setActiveTab('exact')}\r\n            >\r\n              Exact Matches {recipeResults.length > 0 && `(${recipeResults.length})`}\r\n            </button>\r\n            <button\r\n              className={`flex-1 py-2 px-4 text-center ${activeTab === 'almost' ? 'border-b-2 border-red-500 text-red-500 font-medium' : 'text-gray-500'}`}\r\n              onClick={() => setActiveTab('almost')}\r\n            >\r\n              Almost Matches {almostMatchingRecipes.length > 0 && `(${almostMatchingRecipes.length})`}\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Exact Matches Tab */}\r\n          {activeTab === 'exact' && (\r\n            <div className=\"space-y-4 max-h-[400px] overflow-y-auto px-2\">\r\n              {recipeResults.length === 0 ? (\r\n                <p className=\"text-center py-6 text-gray-400\">No exact matches found. Check \"Almost Matches\" tab for recipes you can make with just a few more ingredients.</p>\r\n              ) : (\r\n                recipeResults.map(recipe => (\r\n                  <div \r\n                    key={recipe.id}\r\n                    onClick={() => handleRecipeClick(recipe.id)}\r\n                    className=\"bg-red-500 text-white rounded-2xl py-4 px-5 flex justify-between items-center cursor-pointer hover:bg-red-600 transition-colors shadow-md\"\r\n                  >\r\n                    <span className=\"text-base font-medium\">{recipe.title}</span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                      <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Almost Matching Tab */}\r\n          {activeTab === 'almost' && (\r\n            <div className=\"space-y-6 max-h-[400px] overflow-y-auto px-2\">\r\n              {almostMatchingRecipes.length === 0 ? (\r\n                <p className=\"text-center py-6 text-gray-400\">No almost-matching recipes found with your ingredients.</p>\r\n              ) : (\r\n                almostMatchingRecipes.map(item => (\r\n                  <div key={item.recipe.recipe_id} className=\"bg-white rounded-xl shadow-md overflow-hidden border border-gray-100\">\r\n                    <div \r\n                      onClick={() => handleRecipeClick(item.recipe.recipe_id)}\r\n                      className=\"bg-red-500 text-white py-3 px-4 flex justify-between items-center cursor-pointer hover:bg-red-600 transition-colors\"\r\n                    >\r\n                      <span className=\"text-base font-medium\">{item.recipe.title}</span>\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"bg-white text-red-500 text-xs font-bold rounded-full px-2 py-1 mr-2\">\r\n                          Missing {item.missing_count}\r\n                        </span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                          <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Missing ingredients section */}\r\n                    <div className=\"p-4\">\r\n                      <h3 className=\"text-sm font-semibold text-gray-500 mb-2\">Missing Ingredients:</h3>\r\n                      <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                        {item.missing_ingredients.map(ingredient => (\r\n                          <span key={ingredient} className=\"bg-red-100 text-red-600 text-xs font-medium px-2 py-1 rounded-full\">\r\n                            {ingredient}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                      \r\n                      {/* Substitution suggestions */}\r\n                      {item.substitutions.length > 0 && (\r\n                        <div className=\"mt-3\">\r\n                          <button\r\n                            onClick={() => toggleSubstitution(item.recipe.recipe_id)}\r\n                            className=\"text-sm text-blue-500 flex items-center\"\r\n                          >\r\n                            <span>{expandedSubstitutions[item.recipe.recipe_id] ? 'Hide' : 'Show'} substitution ideas</span>\r\n                            <svg \r\n                              xmlns=\"http://www.w3.org/2000/svg\" \r\n                              className={`h-4 w-4 ml-1 transform transition-transform ${expandedSubstitutions[item.recipe.recipe_id] ? 'rotate-180' : ''}`} \r\n                              viewBox=\"0 0 20 20\" \r\n                              fill=\"currentColor\"\r\n                            >\r\n                              <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                          </button>\r\n                          \r\n                          {expandedSubstitutions[item.recipe.recipe_id] && (\r\n                            <div className=\"mt-2 pl-2 border-l-2 border-blue-200\">\r\n                              {item.substitutions.map(sub => (\r\n                                <div key={sub.ingredient} className=\"mb-2\">\r\n                                  <span className=\"text-xs font-medium text-gray-600\">\r\n                                    Instead of <span className=\"text-red-500\">{sub.ingredient}</span>, try:\r\n                                  </span>\r\n                                  <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                    {sub.substitutes.length > 0 ? (\r\n                                      sub.substitutes.map(substitute => (\r\n                                        <span key={substitute} className=\"bg-green-100 text-green-600 text-xs px-2 py-0.5 rounded\">\r\n                                          {substitute}\r\n                                        </span>\r\n                                      ))\r\n                                    ) : (\r\n                                      <span className=\"text-xs text-gray-500\">No substitutions found</span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"mt-8 flex justify-center\">\r\n            <button\r\n              onClick={() => setShowModal(false)}\r\n              className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 px-8 py-2 rounded-full transition-colors\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 flex flex-col\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <Header />\r\n      </div>\r\n      \r\n      <div className=\"flex-grow flex flex-col items-center justify-center p-4\">\r\n        <div className=\"bg-white rounded-3xl w-full max-w-xl p-6 shadow-lg\">\r\n          <h2 className=\"text-xl font-medium text-center mb-6 text-gray-500\">Find Recipes With Your Ingredients</h2>\r\n          \r\n          <form onSubmit={handleSearchSubmit} className=\"space-y-4\">\r\n            <div className=\"bg-red-200 bg-opacity-50 rounded-full p-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={ingredientsInput}\r\n                onChange={(e) => setIngredientsInput(e.target.value)}\r\n                placeholder=\"Add Your Ingredients Here\"\r\n                className=\"w-full bg-transparent text-center text-red-600 placeholder-red-400 focus:outline-none text-lg\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex justify-center mt-4\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"bg-red-500 text-white hover:bg-red-600 px-6 py-2 rounded-full shadow-md transition-colors focus:outline-none focus:ring-2 focus:ring-red-400 disabled:opacity-50 w-auto max-w-xs mx-auto\"\r\n              >\r\n                {loading ? 'Searching...' : 'Search Recipes'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n          <div className=\"mt-4 text-gray-500 text-center text-sm\">\r\n            <p>Enter ingredients separated by commas (e.g., \"chicken, rice, garlic\")</p>\r\n            <p className=\"mt-2 text-green-600\">We'll also suggest recipes you can make with alternatives!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {showModal && renderRecipeModal()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IngredientRecommendationPage"],"names":["LoadingSpinner","_ref","size","color","message","dotSize","sm","md","lg","_jsx","className","children","_jsxs","Array","map","_","i","style","width","height","animationDelay","React","showMenu","user","logout","useAuth","navigate","useNavigate","location","useLocation","isMenuOpen","setIsMenuOpen","useState","menuRef","useRef","currentPath","pathname","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","toggleMenu","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","username","IngredientRecommendationPage","isAuthenticated","isLoading","modalRef","ingredientsInput","setIngredientsInput","recipeResults","setRecipeResults","almostMatchingRecipes","setAlmostMatchingRecipes","loading","setLoading","showModal","setShowModal","activeTab","setActiveTab","expandedSubstitutions","setExpandedSubstitutions","handleSearchSubmit","useCallback","async","e","preventDefault","trim","recipes","recipesApi","searchByIngredients","data","recipe","id","recipe_id","image","image_url","isFavorite","almostMatchResponse","getAlmostMatchingRecipes","length","error","console","handleRecipeClick","recipeId","Header","onSubmit","type","value","onChange","placeholder","disabled","fillRule","clipRule","item","missing_count","missing_ingredients","ingredient","substitutions","toggleSubstitution","prev","sub","substitutes","substitute"],"sourceRoot":""}