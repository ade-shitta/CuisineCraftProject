{"version":3,"file":"static/js/197.78321407.chunk.js","mappings":"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","sources":["components/ProfileEditModal.tsx","pages/ProfilePage.tsx","components/Header.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { auth } from '../services/api';\r\n\r\ninterface ProfileEditModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ProfileEditModal: React.FC<ProfileEditModalProps> = ({ isOpen, onClose }) => {\r\n  const { user, updateUser } = useAuth();\r\n  const [firstName, setFirstName] = useState(user?.firstName || '');\r\n  const [lastName, setLastName] = useState(user?.lastName || '');\r\n  const [username, setUsername] = useState(user?.username || '');\r\n  const [email, setEmail] = useState(user?.email || '');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [previewUrl, setPreviewUrl] = useState<string | null>(user?.profileImage || null);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  // Reset form when modal opens with latest user data\r\n  useEffect(() => {\r\n    if (isOpen && user) {\r\n      setFirstName(user.firstName || '');\r\n      setLastName(user.lastName || '');\r\n      setUsername(user.username || '');\r\n      setEmail(user.email || '');\r\n      setPreviewUrl(user.profileImage || null);\r\n      setSelectedFile(null);\r\n      setError('');\r\n    }\r\n  }, [isOpen, user]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      setSelectedFile(file);\r\n      \r\n      // Create a preview URL\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        setPreviewUrl(fileReader.result as string);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const triggerFileInput = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      \r\n      // Use the exact field names the backend expects\r\n      formData.append('username', username);\r\n      formData.append('email', email);\r\n      formData.append('firstName', firstName);\r\n      formData.append('lastName', lastName);\r\n      \r\n      if (selectedFile) {\r\n        formData.append('profileImage', selectedFile);\r\n      }\r\n\r\n      const updateResponse = await auth.updateProfile(formData);\r\n      console.log('Profile update response:', updateResponse);\r\n\r\n      if (user) {\r\n        const response = await auth.getProfile();\r\n        \r\n        updateUser({\r\n          id: response.data.id,\r\n          username: response.data.username,\r\n          firstName: response.data.firstName,\r\n          lastName: response.data.lastName,\r\n          email: response.data.email,\r\n          dateOfBirth: response.data.dateOfBirth,\r\n          profileImage: response.data.profileImage,\r\n        });\r\n        \r\n        onClose();\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Profile update error:', err);\r\n      \r\n      if (err.response) {\r\n        setError(`Error ${err.response.status}: ${err.response.data?.message || err.response.data?.detail || 'Failed to update profile'}`);\r\n      } else if (err.request) {\r\n        setError('No response received from server. Check your connection.');\r\n      } else {\r\n        setError(`Error: ${err.message}`);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n      onClick={onClose}\r\n    >\r\n      <div \r\n        className=\"rounded-lg p-6 w-full max-w-md\"\r\n        style={{ backgroundColor: \"#ff7b7b\" }}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <h2 className=\"text-2xl font-bold mb-4 text-white\">Edit Profile</h2>\r\n        \r\n        {error && <div className=\"bg-red-100 text-red-700 p-2 rounded mb-4\">{error}</div>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          {/* Hidden file input */}\r\n          <input \r\n            id=\"profilePicture\"\r\n            type=\"file\" \r\n            className=\"hidden\"\r\n            onChange={handleFileChange}\r\n            ref={fileInputRef}\r\n            aria-label=\"Profile Picture\"\r\n            accept=\"image/*\"\r\n          />\r\n\r\n          {/* Profile Picture Preview - Now Clickable */}\r\n          <div className=\"mb-6 flex flex-col items-center\">\r\n            <div \r\n              className=\"relative w-32 h-32 rounded-full mb-3 overflow-hidden border-4 border-white group cursor-pointer\"\r\n              onClick={triggerFileInput}\r\n              onMouseEnter={() => setIsHovering(true)}\r\n              onMouseLeave={() => setIsHovering(false)}\r\n              role=\"button\"\r\n              aria-label=\"Change profile picture\"\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  triggerFileInput();\r\n                }\r\n              }}\r\n            >\r\n              {previewUrl ? (\r\n                <img \r\n                  src={previewUrl} \r\n                  alt=\"Profile Preview\" \r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full h-full bg-white bg-opacity-90 flex items-center justify-center text-gray-500\">\r\n                  No Image\r\n                </div>\r\n              )}\r\n              \r\n              {/* Overlay with edit icon/text */}\r\n              <div \r\n                className={`absolute inset-0 bg-black bg-opacity-60 flex flex-col items-center justify-center text-white transition-opacity ${\r\n                  isHovering ? 'opacity-100' : 'opacity-0'\r\n                }`}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mb-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                </svg>\r\n                <span className=\"text-xs font-semibold\">Change Photo</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <p className=\"text-white text-sm text-center mb-2\">\r\n              Click on the image to change your profile picture\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"firstName\" className=\"block text-white mb-1\">First Name</label>\r\n            <input \r\n              id=\"firstName\"\r\n              type=\"text\" \r\n              className=\"w-full py-3 px-4 rounded-3xl bg-white bg-opacity-90 border-none text-gray-800\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              aria-label=\"First Name\"\r\n              placeholder=\"Enter your first name\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"lastName\" className=\"block text-white mb-1\">Last Name</label>\r\n            <input \r\n              id=\"lastName\"\r\n              type=\"text\" \r\n              className=\"w-full py-3 px-4 rounded-3xl bg-white bg-opacity-90 border-none text-gray-800\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              aria-label=\"Last Name\"\r\n              placeholder=\"Enter your last name\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"username\" className=\"block text-white mb-1\">Username</label>\r\n            <input \r\n              id=\"username\"\r\n              type=\"text\" \r\n              className=\"w-full py-3 px-4 rounded-3xl bg-white bg-opacity-90 border-none text-gray-800\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              aria-label=\"Username\"\r\n              placeholder=\"Enter your username\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"email\" className=\"block text-white mb-1\">Email</label>\r\n            <input \r\n              id=\"email\"\r\n              type=\"email\" \r\n              className=\"w-full py-3 px-4 rounded-3xl bg-white bg-opacity-90 border-none text-gray-800\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              aria-label=\"Email\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex justify-end space-x-3 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"px-4 py-3 bg-white bg-opacity-25 rounded-3xl hover:bg-opacity-40 text-white font-bold\"\r\n              onClick={onClose}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-3 bg-red-500 rounded-3xl hover:bg-red-600 text-white font-bold\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Saving...' : 'Save Changes'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditModal;","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport Header from \"../components/Header\"\r\nimport ProfileEditModal from \"../components/ProfileEditModal\"\r\n\r\nconst ProfilePage = () => {\r\n  const navigate = useNavigate()\r\n  const { user, logout } = useAuth()\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [imageError, setImageError] = useState(false)\r\n\r\n  // Generate initials from the user's name\r\n  const getInitials = () => {\r\n    if (!user) return 'U';\r\n    \r\n    const firstInitial = user.firstName ? user.firstName.charAt(0).toUpperCase() : '';\r\n    const lastInitial = user.lastName ? user.lastName.charAt(0).toUpperCase() : '';\r\n    \r\n    return firstInitial + lastInitial || 'U';\r\n  };\r\n\r\n  // Default avatar URL with initials\r\n  const defaultAvatar = `https://ui-avatars.com/api/?name=${getInitials()}&background=FF7070&color=fff&size=256`;\r\n\r\n  // Use ui-avatars service with the user's actual initials\r\n  const profilePicture = !imageError && user?.profileImage \r\n    ? user.profileImage \r\n    : defaultAvatar;\r\n\r\n  // Log for debugging\r\n  useEffect(() => {\r\n    console.log(\"User profile data:\", user);\r\n    console.log(\"Profile picture URL:\", profilePicture);\r\n  }, [user, profilePicture]);\r\n\r\n  const handleLogout = () => {\r\n    logout()\r\n    navigate(\"/\")\r\n  }\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false)\r\n    // Reset image error when modal is closed to try loading the image again\r\n    setImageError(false)\r\n  }\r\n\r\n  const handleImageError = () => {\r\n    console.error(\"Error loading profile image:\", user?.profileImage);\r\n    setImageError(true); // Set error state to use the default avatar\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 p-4\">\r\n      {/* Updated header layout to match HomePage */}\r\n      <div className=\"flex justify-between items-center mb-8 px-1\">\r\n        <div className=\"flex-1\"></div>\r\n        <div className=\"text-center flex-1\">\r\n          <h1 className=\"text-white text-2xl font-bold\">Profile</h1>\r\n        </div>\r\n        <div className=\"flex-1 flex justify-end pt-1\">\r\n          <Header />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-center justify-center mt-8\">\r\n        <div className=\"avatar mb-4\">\r\n          <div className=\"w-24 rounded-full ring ring-white\">\r\n            <img \r\n              src={profilePicture} \r\n              alt=\"Profile\" \r\n              onError={handleImageError}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <h1 className=\"text-white text-xl font-bold mb-8\">\r\n          {user ? `${user.firstName} ${user.lastName}` : \"Guest User\"}\r\n        </h1>\r\n\r\n        <div className=\"w-full max-w-xs space-y-4\">\r\n          <button\r\n            className=\"btn w-full bg-red-300 hover:bg-red-500 text-white border-none\"\r\n            onClick={openModal}\r\n          >\r\n            Edit Profile\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn w-full bg-red-300 hover:bg-red-500 text-white border-none\"\r\n            onClick={() => navigate(\"/dietary-preferences\")}\r\n          >\r\n            Edit Dietary Preferences\r\n          </button>\r\n\r\n          <button className=\"btn w-full bg-red-500 hover:bg-red-600 text-white border-none mt-8\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile edit modal */}\r\n      <ProfileEditModal isOpen={isModalOpen} onClose={closeModal} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage","\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\n\r\ninterface HeaderProps {\r\n  showMenu?: boolean\r\n}\r\n\r\nconst Header = ({ showMenu = true }: HeaderProps) => {\r\n  const { user, logout } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuRef = useRef<HTMLDivElement>(null) // Add ref for the menu container\r\n\r\n  // Determine current path\r\n  const currentPath = location.pathname\r\n\r\n  // Handle clicks outside the menu\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setIsMenuOpen(false)\r\n      }\r\n    }\r\n\r\n    // Add event listener when menu is open\r\n    if (isMenuOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n\r\n    // Clean up event listener\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n  }, [isMenuOpen])\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMenu && (\r\n        <div ref={menuRef}>\r\n          <button \r\n            onClick={toggleMenu} \r\n            className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center shadow-md\"\r\n            aria-label=\"Menu\"\r\n            title=\"Menu\"\r\n          >\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className=\"h-6 w-6 text-gray-500\" \r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {isMenuOpen && (\r\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-20\">\r\n              <div className=\"px-4 py-2 text-sm text-gray-700\">Hi, {user?.username || \"Guest\"}</div>\r\n              <hr className=\"my-1\" />\r\n              \r\n              {/* Show Home button only if not on homepage */}\r\n              {currentPath !== \"/home\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/home\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Home\r\n                </button>\r\n              )}\r\n              \r\n              {/* Show Profile button only if not on profile page */}\r\n              {currentPath !== \"/profile\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/profile\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Profile\r\n                </button>\r\n              )}\r\n              \r\n              {/* Always show Search by Ingredient unless on that page */}\r\n              {currentPath !== \"/ingredient-recommendations\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/ingredient-recommendations\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Search by Ingredient\r\n                </button>\r\n              )}\r\n              \r\n              <hr className=\"my-1\" />\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  navigate(\"/\")\r\n                  setIsMenuOpen(false)\r\n                }}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header"],"names":["_ref","isOpen","onClose","user","updateUser","useAuth","firstName","setFirstName","useState","lastName","setLastName","username","setUsername","email","setEmail","isLoading","setIsLoading","error","setError","fileInputRef","useRef","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","profileImage","isHovering","setIsHovering","useEffect","triggerFileInput","current","click","_jsx","className","onClick","children","_jsxs","style","backgroundColor","e","stopPropagation","onSubmit","async","preventDefault","formData","FormData","append","updateResponse","auth","updateProfile","console","log","response","getProfile","id","data","dateOfBirth","err","_err$response$data","_err$response$data2","status","message","detail","request","type","onChange","target","files","length","file","fileReader","FileReader","onload","result","readAsDataURL","ref","accept","onMouseEnter","onMouseLeave","role","tabIndex","onKeyDown","key","src","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","value","placeholder","required","disabled","ProfilePage","navigate","useNavigate","logout","isModalOpen","setIsModalOpen","imageError","setImageError","defaultAvatar","getInitials","charAt","toUpperCase","profilePicture","Header","onError","handleImageError","openModal","handleLogout","ProfileEditModal","closeModal","showMenu","location","useLocation","isMenuOpen","setIsMenuOpen","menuRef","currentPath","pathname","handleClickOutside","event","contains","document","addEventListener","removeEventListener","toggleMenu","title"],"sourceRoot":""}