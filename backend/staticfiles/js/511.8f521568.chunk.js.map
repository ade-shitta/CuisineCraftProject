{"version":3,"file":"static/js/511.8f521568.chunk.js","mappings":"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","sources":["pages/HomePage.tsx","components/Header.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport Header from \"../components/Header\"\r\nimport RecipeCard from \"../components/RecipeCard\"\r\nimport { recipes, recommendations } from \"../services/api\"\r\nimport { ApiRecipe } from \"../types/api\"\r\n\r\nconst RecipeCardSkeleton = () => (\r\n  <div className=\"flex-shrink-0 transform w-40 h-40\">\r\n    <div className=\"relative w-40 h-40 rounded-xl overflow-hidden shadow-md bg-gray-200 animate-pulse\">\r\n      <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-xl py-2\">\r\n        <div className=\"w-3/4 h-4 bg-gray-200 mx-auto\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst HomePage = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n  const [recipeData, setRecipeData] = useState<any[]>([])\r\n  const [recommendedRecipes, setRecommendedRecipes] = useState<any[]>([])\r\n  const [favorites, setFavorites] = useState<any[]>([])\r\n  \r\n  const [loadingRecommendations, setLoadingRecommendations] = useState(true)\r\n  const [loadingFavorites, setLoadingFavorites] = useState(true)\r\n  \r\n  const discoverScrollRef = useRef<HTMLDivElement>(null)\r\n  const favoritesScrollRef = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !isAuthenticated) {\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n  }, [isAuthenticated, navigate, isLoading])\r\n\r\n  const fetchRecommendations = async () => {\r\n    if (!isAuthenticated) return;\r\n    \r\n    setLoadingRecommendations(true);\r\n    try {\r\n      const recommendedResponse = await recommendations.getRecommended(12);\r\n      \r\n      if (Array.isArray(recommendedResponse.data)) {\r\n        setRecommendedRecipes(recommendedResponse.data.map((recipe: ApiRecipe) => ({\r\n          id: recipe.recipe_id,\r\n          title: recipe.title,\r\n          image: recipe.image_url,\r\n          isFavorite: recipe.isFavorite\r\n        })));\r\n      } else {\r\n        console.error(\"Error: Recommendations data is not an array\", recommendedResponse);\r\n        setRecommendedRecipes([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching recommendations:\", error);\r\n    } finally {\r\n      setLoadingRecommendations(false);\r\n    }\r\n  }\r\n  \r\n  const fetchFavorites = async () => {\r\n    if (!isAuthenticated) return;\r\n    \r\n    setLoadingFavorites(true);\r\n    try {\r\n      const favoritesResponse = await recipes.getFavorites();\r\n      \r\n      setFavorites(favoritesResponse.data.map((recipe: ApiRecipe) => ({\r\n        id: recipe.recipe_id,\r\n        title: recipe.title,\r\n        image: recipe.image_url,\r\n        isFavorite: true\r\n      })));\r\n    } catch (error) {\r\n      console.error(\"Error fetching favorites:\", error);\r\n    } finally {\r\n      setLoadingFavorites(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      return\r\n    }\r\n\r\n    fetchRecommendations();\r\n    fetchFavorites();\r\n  }, [isAuthenticated, navigate, location.key, user?.id])\r\n\r\n  useEffect(() => {\r\n    // Create a set of favorite recipe IDs for quick lookup\r\n    const favoriteIds = new Set(favorites.map(recipe => recipe.id));\r\n    \r\n    // Update recommended recipes to match favorite status\r\n    setRecommendedRecipes(prevRecipes => \r\n      prevRecipes.map(recipe => ({\r\n        ...recipe,\r\n        isFavorite: favoriteIds.has(recipe.id)\r\n      }))\r\n    );\r\n  }, [favorites]);\r\n\r\n  const handleToggleFavorite = async (id: string) => {\r\n    try {\r\n      await recipes.toggleFavorite(id);\r\n      \r\n      // Update recipe data state\r\n      setRecipeData(prevRecipes => \r\n        prevRecipes.map(recipe => \r\n          recipe.id === id \r\n            ? { ...recipe, isFavorite: !recipe.isFavorite } \r\n            : recipe\r\n        )\r\n      );\r\n      \r\n      // First, toggle the favorite status in recommended recipes immediately\r\n      setRecommendedRecipes(prevRecipes => \r\n        prevRecipes.map(recipe => \r\n          recipe.id === id \r\n            ? { ...recipe, isFavorite: !recipe.isFavorite } \r\n            : recipe\r\n        )\r\n      );\r\n      \r\n      // Update the favorites list\r\n      const wasInFavorites = favorites.some(recipe => recipe.id === id);\r\n      if (wasInFavorites) {\r\n        setFavorites(prevFavorites => \r\n          prevFavorites.filter(recipe => recipe.id !== id)\r\n        );\r\n      } else {\r\n        const favoritesResponse = await recipes.getFavorites();\r\n        setFavorites(favoritesResponse.data.map((recipe: ApiRecipe) => ({\r\n          id: recipe.recipe_id,\r\n          title: recipe.title,\r\n          image: recipe.image_url,\r\n          isFavorite: true\r\n        })));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling favorite:\", error);\r\n    }\r\n  }\r\n  \r\n  const scrollRecipes = (ref: { current: HTMLDivElement | null }, direction: 'left' | 'right') => {\r\n    if (!ref.current) return;\r\n    \r\n    const scrollContainer = ref.current;\r\n    \r\n    scrollContainer.style.scrollBehavior = 'auto';\r\n    \r\n    const cardWidth = 128; \r\n    const marginRight = 16; \r\n    const scrollAmount = cardWidth + marginRight;\r\n    \r\n    const newPosition = direction === 'left'\r\n      ? scrollContainer.scrollLeft - scrollAmount\r\n      : scrollContainer.scrollLeft + scrollAmount;\r\n    \r\n    setTimeout(() => {\r\n      scrollContainer.style.scrollBehavior = 'smooth';\r\n      scrollContainer.scrollLeft = newPosition;\r\n    }, 0);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-red-400 flex items-center justify-center\">\r\n        <div className=\"loading loading-spinner loading-lg text-white\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 p-4\">\r\n      <div className=\"flex justify-between items-center mb-8 px-1\">\r\n        <div className=\"flex-1\"></div>\r\n        <div className=\"text-center flex-1\">\r\n          <h1 className=\"text-white text-2xl font-bold\">Hi! {user?.username || \"Guest\"}</h1>\r\n          <p className=\"text-white/80 mt-1\">What are we cooking today?</p>\r\n        </div>\r\n        <div className=\"flex-1 flex justify-end pt-1\">\r\n          <Header />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button \r\n            onClick={() => navigate('/recipes')} \r\n            className=\"btn bg-red-500 hover:bg-red-600 text-white border-none flex items-center hover:scale-105 transition-all duration-300 hover:shadow-lg\"\r\n          >\r\n            Discover Recipes\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\r\n            </svg>\r\n          </button>\r\n          <button \r\n            className=\"btn btn-circle btn-sm bg-red-500 hover:bg-red-600 text-white border-none hover:scale-110 transition-all duration-300 hover:shadow-lg\"\r\n            onClick={() => scrollRecipes(discoverScrollRef, 'right')}\r\n            aria-label=\"Scroll discover recipes right\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div \r\n          ref={discoverScrollRef} \r\n          className=\"flex gap-4 overflow-x-auto hide-scrollbar\"\r\n          style={{ scrollBehavior: 'smooth' }}\r\n        >\r\n          {loadingRecommendations ? (\r\n            Array(6).fill(0).map((_, index) => (\r\n              <RecipeCardSkeleton key={`skeleton-${index}`} />\r\n            ))\r\n          ) : (\r\n            recommendedRecipes.map((recipe) => (\r\n              <div className=\"flex-shrink-0 transform transition duration-300 hover:scale-105\" key={recipe.id}>\r\n                <div className=\"relative w-40 h-40 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all\">\r\n                  <img \r\n                    src={recipe.image} \r\n                    alt={recipe.title} \r\n                    className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-110\"\r\n                    onClick={() => navigate(`/recipe/${recipe.id}`)}\r\n                    loading=\"lazy\" \r\n                  />\r\n                  <button \r\n                    className=\"absolute top-2 right-2 bg-pink-100 rounded-full p-1.5 shadow-sm hover:bg-pink-200 transition-colors duration-300\"\r\n                    onClick={() => handleToggleFavorite(recipe.id)}\r\n                    aria-label={recipe.isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\r\n                  >\r\n                    <svg \r\n                      xmlns=\"http://www.w3.org/2000/svg\" \r\n                      className={`h-5 w-5 ${recipe.isFavorite ? 'text-red-500' : 'text-gray-400'} transition-colors duration-300`} \r\n                      viewBox=\"0 0 20 20\" \r\n                      fill=\"currentColor\"\r\n                    >\r\n                      <path \r\n                        fillRule=\"evenodd\" \r\n                        d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" \r\n                        clipRule=\"evenodd\" \r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                  <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-xl py-2\">\r\n                    <p className=\"text-center text-gray-800 font-medium text-sm\">{recipe.title}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button \r\n            onClick={() => navigate('/favorites')} \r\n            className=\"btn bg-red-500 hover:bg-red-600 text-white border-none flex items-center hover:scale-105 transition-all duration-300 hover:shadow-lg\"\r\n          >\r\n            My Favorites\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\r\n            </svg>\r\n          </button>\r\n          <button \r\n            className=\"btn btn-circle btn-sm bg-red-500 hover:bg-red-600 text-white border-none hover:scale-110 transition-all duration-300 hover:shadow-lg\"\r\n            onClick={() => scrollRecipes(favoritesScrollRef, 'right')}\r\n            aria-label=\"Scroll favorites right\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div \r\n          ref={favoritesScrollRef}\r\n          className=\"flex overflow-x-auto hide-scrollbar gap-4\"\r\n          style={{ scrollBehavior: 'smooth' }}\r\n        >\r\n          {loadingFavorites ? (\r\n            Array(4).fill(0).map((_, index) => (\r\n              <RecipeCardSkeleton key={`skeleton-fav-${index}`} />\r\n            ))\r\n          ) : (\r\n            favorites.slice(0, 12).map((recipe) => (\r\n              <div className=\"flex-shrink-0 transform transition duration-300 hover:scale-105\" key={recipe.id}>\r\n                <div className=\"relative w-40 h-40 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all\">\r\n                  <img \r\n                    src={recipe.image} \r\n                    alt={recipe.title} \r\n                    className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-110\"\r\n                    onClick={() => navigate(`/recipe/${recipe.id}`)}\r\n                    loading=\"lazy\" \r\n                  />\r\n                  <button \r\n                    className=\"absolute top-2 right-2 bg-pink-100 rounded-full p-1.5 shadow-sm hover:bg-pink-200 transition-colors duration-300\"\r\n                    onClick={() => handleToggleFavorite(recipe.id)}\r\n                    aria-label=\"Remove from favorites\"\r\n                  >\r\n                    <svg \r\n                      xmlns=\"http://www.w3.org/2000/svg\" \r\n                      className=\"h-5 w-5 text-red-500\" \r\n                      viewBox=\"0 0 20 20\" \r\n                      fill=\"currentColor\"\r\n                    >\r\n                      <path \r\n                        fillRule=\"evenodd\" \r\n                        d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" \r\n                        clipRule=\"evenodd\" \r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                  <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-xl py-2\">\r\n                    <p className=\"text-center text-gray-800 font-medium text-sm\">{recipe.title}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\n\r\ninterface HeaderProps {\r\n  showMenu?: boolean\r\n}\r\n\r\nconst Header = ({ showMenu = true }: HeaderProps) => {\r\n  const { user, logout } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuRef = useRef<HTMLDivElement>(null) // Add ref for the menu container\r\n\r\n  // Determine current path\r\n  const currentPath = location.pathname\r\n\r\n  // Handle clicks outside the menu\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setIsMenuOpen(false)\r\n      }\r\n    }\r\n\r\n    // Add event listener when menu is open\r\n    if (isMenuOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n\r\n    // Clean up event listener\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n  }, [isMenuOpen])\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMenu && (\r\n        <div ref={menuRef}>\r\n          <button \r\n            onClick={toggleMenu} \r\n            className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center shadow-md\"\r\n            aria-label=\"Menu\"\r\n            title=\"Menu\"\r\n          >\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className=\"h-6 w-6 text-gray-500\" \r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {isMenuOpen && (\r\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-20\">\r\n              <div className=\"px-4 py-2 text-sm text-gray-700\">Hi, {user?.username || \"Guest\"}</div>\r\n              <hr className=\"my-1\" />\r\n              \r\n              {/* Show Home button only if not on homepage */}\r\n              {currentPath !== \"/home\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/home\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Home\r\n                </button>\r\n              )}\r\n              \r\n              {/* Show Profile button only if not on profile page */}\r\n              {currentPath !== \"/profile\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/profile\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Profile\r\n                </button>\r\n              )}\r\n              \r\n              {/* Always show Search by Ingredient unless on that page */}\r\n              {currentPath !== \"/ingredient-recommendations\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/ingredient-recommendations\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Search by Ingredient\r\n                </button>\r\n              )}\r\n              \r\n              <hr className=\"my-1\" />\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  navigate(\"/\")\r\n                  setIsMenuOpen(false)\r\n                }}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header"],"names":["RecipeCardSkeleton","_jsx","className","children","HomePage","user","isAuthenticated","isLoading","useAuth","navigate","useNavigate","location","useLocation","searchQuery","setSearchQuery","useState","recipeData","setRecipeData","recommendedRecipes","setRecommendedRecipes","favorites","setFavorites","loadingRecommendations","setLoadingRecommendations","loadingFavorites","setLoadingFavorites","discoverScrollRef","useRef","favoritesScrollRef","useEffect","async","recommendedResponse","recommendations","getRecommended","Array","isArray","data","map","recipe","id","recipe_id","title","image","image_url","isFavorite","console","error","fetchRecommendations","favoritesResponse","recipes","getFavorites","fetchFavorites","key","favoriteIds","Set","prevRecipes","has","handleToggleFavorite","toggleFavorite","some","prevFavorites","filter","scrollRecipes","ref","direction","current","scrollContainer","style","scrollBehavior","newPosition","scrollLeft","cardWidth","setTimeout","_jsxs","username","Header","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","_","index","src","alt","loading","slice","_ref","showMenu","logout","isMenuOpen","setIsMenuOpen","menuRef","currentPath","pathname","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","toggleMenu"],"sourceRoot":""}