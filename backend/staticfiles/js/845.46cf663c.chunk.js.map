{"version":3,"file":"static/js/845.46cf663c.chunk.js","mappings":"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","sources":["components/Header.tsx","pages/FavoritesPage.tsx"],"sourcesContent":["\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\n\r\ninterface HeaderProps {\r\n  showMenu?: boolean\r\n}\r\n\r\nconst Header = ({ showMenu = true }: HeaderProps) => {\r\n  const { user, logout } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuRef = useRef<HTMLDivElement>(null) // Add ref for the menu container\r\n\r\n  // Determine current path\r\n  const currentPath = location.pathname\r\n\r\n  // Handle clicks outside the menu\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setIsMenuOpen(false)\r\n      }\r\n    }\r\n\r\n    // Add event listener when menu is open\r\n    if (isMenuOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n\r\n    // Clean up event listener\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside)\r\n    }\r\n  }, [isMenuOpen])\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showMenu && (\r\n        <div ref={menuRef}>\r\n          <button \r\n            onClick={toggleMenu} \r\n            className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center shadow-md\"\r\n            aria-label=\"Menu\"\r\n            title=\"Menu\"\r\n          >\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className=\"h-6 w-6 text-gray-500\" \r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {isMenuOpen && (\r\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-20\">\r\n              <div className=\"px-4 py-2 text-sm text-gray-700\">Hi, {user?.username || \"Guest\"}</div>\r\n              <hr className=\"my-1\" />\r\n              \r\n              {/* Show Home button only if not on homepage */}\r\n              {currentPath !== \"/home\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/home\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Home\r\n                </button>\r\n              )}\r\n              \r\n              {/* Show Profile button only if not on profile page */}\r\n              {currentPath !== \"/profile\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/profile\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Profile\r\n                </button>\r\n              )}\r\n              \r\n              {/* Always show Search by Ingredient unless on that page */}\r\n              {currentPath !== \"/ingredient-recommendations\" && (\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/ingredient-recommendations\")\r\n                    setIsMenuOpen(false)\r\n                  }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  Search by Ingredient\r\n                </button>\r\n              )}\r\n              \r\n              <hr className=\"my-1\" />\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  navigate(\"/\")\r\n                  setIsMenuOpen(false)\r\n                }}\r\n                className=\"block w-full text-left px-4 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport Header from \"../components/Header\"\r\nimport { recipes } from \"../services/api\"\r\nimport { ApiRecipe } from \"../types/api\"\r\n\r\nconst FavoritesPage = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [favorites, setFavorites] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // Only redirect if we're done loading and not authenticated\r\n    if (!isLoading && !isAuthenticated) {\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n  }, [isAuthenticated, navigate, isLoading])\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      return\r\n    }\r\n\r\n    const fetchFavorites = async () => {\r\n      try {\r\n        const favoritesResponse = await recipes.getFavorites()\r\n        setFavorites(favoritesResponse.data.map((recipe: ApiRecipe) => ({\r\n          id: recipe.recipe_id,\r\n          title: recipe.title,\r\n          image: recipe.image_url,\r\n          isFavorite: true\r\n        })))\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(\"Error fetching favorites:\", error)\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchFavorites()\r\n  }, [isAuthenticated])\r\n\r\n  const handleToggleFavorite = async (id: string) => {\r\n    try {\r\n      await recipes.toggleFavorite(id)\r\n      \r\n      // Remove the recipe from favorites immediately for better UX\r\n      setFavorites(favorites.filter(recipe => recipe.id !== id))\r\n    } catch (error) {\r\n      console.error(\"Error removing from favorites:\", error)\r\n    }\r\n  }\r\n\r\n  if (isLoading || loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-red-400 flex items-center justify-center\">\r\n        <div className=\"loading loading-spinner loading-lg text-white\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 p-4\">\r\n      <div className=\"flex justify-between items-center mb-8 px-1\">\r\n        <div className=\"flex-1\"></div>\r\n        <div className=\"text-center flex-1\">\r\n          <h1 className=\"text-white text-2xl font-bold\">Favorites</h1>\r\n        </div>\r\n        <div className=\"flex-1 flex justify-end pt-1\">\r\n          <Header />\r\n        </div>\r\n      </div>\r\n\r\n      {favorites.length > 0 ? (\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 mx-auto max-w-6xl mb-8\">\r\n          {favorites.map((recipe) => (\r\n            <div key={recipe.id} className=\"flex-shrink-0 transform transition duration-300 hover:scale-105\">\r\n              <div className=\"relative w-full aspect-square rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-shadow\">\r\n                <img \r\n                  src={recipe.image} \r\n                  alt={recipe.title} \r\n                  className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-110\"\r\n                  onClick={() => navigate(`/recipe/${recipe.id}`)}\r\n                />\r\n                <button \r\n                  className=\"absolute top-2 right-2 bg-pink-100 rounded-full p-1.5 shadow-sm hover:bg-pink-200 transition-colors\"\r\n                  onClick={() => handleToggleFavorite(recipe.id)}\r\n                  aria-label=\"Remove from favorites\"\r\n                  title=\"Remove from favorites\"\r\n                >\r\n                  <svg \r\n                    xmlns=\"http://www.w3.org/2000/svg\" \r\n                    className=\"h-5 w-5 text-red-500\" \r\n                    viewBox=\"0 0 20 20\" \r\n                    fill=\"currentColor\"\r\n                  >\r\n                    <path \r\n                      fillRule=\"evenodd\" \r\n                      d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" \r\n                      clipRule=\"evenodd\" \r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-xl py-2\">\r\n                  <p className=\"text-center text-gray-800 font-medium text-sm\">{recipe.title}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-10\">\r\n          <p className=\"text-white text-lg mb-4\">You haven't added any favorites yet</p>\r\n          <button \r\n            onClick={() => navigate('/recipes')}\r\n            className=\"btn bg-white text-red-500 hover:bg-red-100 border-none hover:scale-105 transition-transform duration-300 hover:shadow-md\"\r\n          >\r\n            Explore Recipes\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FavoritesPage"],"names":["_ref","showMenu","user","logout","useAuth","navigate","useNavigate","location","useLocation","isMenuOpen","setIsMenuOpen","useState","menuRef","useRef","currentPath","pathname","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsx","children","_jsxs","ref","onClick","toggleMenu","className","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","username","FavoritesPage","isAuthenticated","isLoading","favorites","setFavorites","loading","setLoading","async","favoritesResponse","recipes","getFavorites","data","map","recipe","id","recipe_id","image","image_url","isFavorite","error","console","fetchFavorites","Header","length","src","alt","toggleFavorite","filter","handleToggleFavorite","fillRule","clipRule"],"sourceRoot":""}