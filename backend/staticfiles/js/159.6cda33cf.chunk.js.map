{"version":3,"file":"static/js/159.6cda33cf.chunk.js","mappings":"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","sources":["pages/RecipesPage.tsx"],"sourcesContent":["\r\n\r\nimport { useState, useEffect, useCallback, useMemo } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport Header from \"../components/Header\"\r\nimport { recipes } from \"../services/api\"\r\nimport { ApiRecipe } from \"../types/api\"\r\nimport React from 'react'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\n\r\n// Recipe item type for internal usage\r\ninterface RecipeItem {\r\n  id: string;\r\n  title: string;\r\n  image?: string;\r\n  isFavorite: boolean;\r\n}\r\n\r\ninterface RecipeCardProps {\r\n  recipe: RecipeItem;\r\n  onToggleFavorite: (id: string) => void;\r\n  onCardClick: (id: string) => void;\r\n}\r\n\r\n// Memoize recipe card component\r\nconst RecipeCard: React.FC<RecipeCardProps> = React.memo(({ recipe, onToggleFavorite, onCardClick }) => {\r\n  const handleToggle = useCallback((e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    onToggleFavorite(recipe.id);\r\n  }, [recipe.id, onToggleFavorite]);\r\n\r\n  const handleClick = useCallback(() => {\r\n    onCardClick(recipe.id);\r\n  }, [recipe.id, onCardClick]);\r\n\r\n  return (\r\n    <div className=\"flex-shrink-0 transform transition duration-300 hover:scale-105\">\r\n      <div className=\"relative w-full aspect-square rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all\">\r\n        <img \r\n          src={recipe.image || \"/placeholder.svg\"} \r\n          alt={recipe.title} \r\n          className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-110\"\r\n          loading=\"lazy\" // Lazy load images that might be off-screen\r\n          onClick={handleClick}\r\n        />\r\n        <button \r\n          className=\"absolute top-2 right-2 bg-pink-100 rounded-full p-1.5 shadow-sm hover:bg-pink-200 transition-colors duration-300\"\r\n          onClick={handleToggle}\r\n          aria-label={recipe.isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\r\n          title={recipe.isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\r\n        >\r\n          <svg \r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            className={`h-5 w-5 ${recipe.isFavorite ? 'text-red-500' : 'text-gray-400'} transition-colors duration-300`}\r\n            viewBox=\"0 0 20 20\" \r\n            fill=\"currentColor\"\r\n          >\r\n            <path \r\n              fillRule=\"evenodd\" \r\n              d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" \r\n              clipRule=\"evenodd\" \r\n            />\r\n          </svg>\r\n        </button>\r\n        <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-xl py-2 transition-colors duration-300 hover:bg-gray-50\">\r\n          <p className=\"text-center text-gray-800 font-medium text-sm\">{recipe.title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst RecipesPage: React.FC = () => {\r\n  const { isAuthenticated, isLoading: authLoading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [allRecipes, setAllRecipes] = useState<RecipeItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const recipesPerPage = 12; // 4 columns x 3 rows = 12 recipes per page\r\n\r\n  // Fetch recipes when component mounts or when navigating back to the page\r\n  useEffect(() => {\r\n    if (!isAuthenticated) return;\r\n\r\n    const fetchRecipes = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await recipes.getAll();\r\n        const recipeItems = response.data.map((recipe: ApiRecipe) => ({\r\n          id: recipe.recipe_id,\r\n          title: recipe.title,\r\n          image: recipe.image_url,\r\n          isFavorite: recipe.isFavorite\r\n        }));\r\n        \r\n        setAllRecipes(recipeItems);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recipes:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecipes();\r\n  }, [isAuthenticated, location.key]); // Added location.key to reload data when navigating back\r\n\r\n  // Handle user authentication\r\n  useEffect(() => {\r\n    if (!authLoading && !isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [authLoading, isAuthenticated, navigate]);\r\n\r\n  // Memoize handlers\r\n  const handleToggleFavorite = useCallback(async (id: string) => {\r\n    try {\r\n      await recipes.toggleFavorite(id);\r\n      \r\n      // Update local state\r\n      setAllRecipes(prev => \r\n        prev.map(recipe => \r\n          recipe.id === id \r\n            ? { ...recipe, isFavorite: !recipe.isFavorite } \r\n            : recipe\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error toggling favorite:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const handleCardClick = useCallback((id: string) => {\r\n    navigate(`/recipe/${id}`);\r\n  }, [navigate]);\r\n\r\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(e.target.value);\r\n    setCurrentPage(1); // Reset to first page on search\r\n  }, []);\r\n\r\n  // Memoize expensive calculations\r\n  const filteredRecipes = useMemo(() => {\r\n    return allRecipes.filter(recipe =>\r\n      recipe.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  }, [allRecipes, searchQuery]);\r\n\r\n  const paginatedRecipes = useMemo(() => {\r\n    const indexOfLastRecipe = currentPage * recipesPerPage;\r\n    const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n    return filteredRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\r\n  }, [filteredRecipes, currentPage, recipesPerPage]);\r\n\r\n  const totalPages = useMemo(() => {\r\n    return Math.ceil(filteredRecipes.length / recipesPerPage);\r\n  }, [filteredRecipes.length, recipesPerPage]);\r\n\r\n  // Pagination handlers\r\n  const paginate = useCallback((pageNumber: number) => setCurrentPage(pageNumber), []);\r\n  const nextPage = useCallback(() => {\r\n    setCurrentPage(prev => Math.min(prev + 1, totalPages));\r\n  }, [totalPages]);\r\n  \r\n  const prevPage = useCallback(() => {\r\n    setCurrentPage(prev => Math.max(prev - 1, 1));\r\n  }, []);\r\n\r\n  if (authLoading || loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-red-400 flex flex-col items-center justify-center\">\r\n        <div className=\"loading loading-bars loading-lg text-white\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-red-400 p-4\">\r\n      <div className=\"flex justify-between items-center mb-8 px-1\">\r\n        <div className=\"flex-1\">\r\n          <button\r\n            onClick={() => navigate('/home')}\r\n            className=\"bg-red-500 hover:bg-red-600 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-md hover:shadow-lg transition-all duration-300 hover:scale-110\"\r\n            aria-label=\"Back to home\"\r\n            title=\"Back to home\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"text-center flex-1\">\r\n          <h1 className=\"text-white text-2xl font-bold\">Recipes</h1>\r\n        </div>\r\n        <div className=\"flex-1 flex justify-end pt-1\">\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search recipes...\"\r\n              className=\"input input-bordered max-w-xs focus:ring-2 focus:ring-red-300 focus:border-red-300 transition-all duration-300 hover:border-red-200\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n            />\r\n            {searchQuery && (\r\n              <button \r\n                onClick={() => setSearchQuery(\"\")}\r\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-red-500 transition-colors duration-300\"\r\n                aria-label=\"Clear search\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {allRecipes.length === 0 && !loading ? (\r\n        <div className=\"bg-white rounded-lg p-6 shadow-md text-center max-w-md mx-auto\">\r\n          <h2 className=\"text-xl font-semibold mb-3\">No Matching Recipes</h2>\r\n          <p className=\"mb-4\">No recipes match your dietary preferences.</p>\r\n          <button \r\n            onClick={() => navigate('/dietary-preferences')}\r\n            className=\"btn bg-red-500 hover:bg-red-600 text-white border-none hover:scale-105 transition-all duration-300 hover:shadow-lg\"\r\n          >\r\n            Update Preferences\r\n          </button>\r\n        </div>\r\n      ) : paginatedRecipes.length > 0 ? (\r\n        <>\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 mx-auto max-w-6xl mb-8\">\r\n            {paginatedRecipes.map((recipe) => (\r\n              <RecipeCard \r\n                key={recipe.id}\r\n                recipe={recipe}\r\n                onToggleFavorite={handleToggleFavorite}\r\n                onCardClick={handleCardClick}\r\n              />\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Pagination Controls */}\r\n          {totalPages > 1 && (\r\n            <div className=\"flex flex-col items-center gap-2 my-4\">\r\n              <div className=\"flex justify-center gap-2\">\r\n                {/* First page button - only show when on page 3 or higher */}\r\n                {currentPage >= 3 && (\r\n                  <button\r\n                    onClick={() => paginate(1)}\r\n                    className=\"px-4 py-2 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 hover:scale-105 transition-all duration-300 hover:shadow-md\"\r\n                  >\r\n                    « First\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Previous button - only show when not on first page */}\r\n                {currentPage > 1 && (\r\n                  <button\r\n                    onClick={prevPage}\r\n                    className=\"px-4 py-2 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 hover:scale-105 transition-all duration-300 hover:shadow-md\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Show numbered buttons with a limit */}\r\n                {(() => {\r\n                  const pageButtons = [];\r\n                  const maxVisibleButtons = 5;\r\n                  const halfVisible = Math.floor(maxVisibleButtons / 2);\r\n                  \r\n                  let startPage = Math.max(1, currentPage - halfVisible);\r\n                  let endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\r\n                  \r\n                  // Adjust if we're at the end\r\n                  if (endPage - startPage + 1 < maxVisibleButtons) {\r\n                    startPage = Math.max(1, endPage - maxVisibleButtons + 1);\r\n                  }\r\n                  \r\n                  // Generate number buttons\r\n                  for (let i = startPage; i <= endPage; i++) {\r\n                    pageButtons.push(\r\n                      <button\r\n                        key={i}\r\n                        onClick={() => paginate(i)}\r\n                        className={`px-4 py-2 rounded-full border ${\r\n                          currentPage === i \r\n                            ? \"bg-red-500 text-white border-red-500\" \r\n                            : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-100\"\r\n                        }`}\r\n                      >\r\n                        {i}\r\n                      </button>\r\n                    );\r\n                  }\r\n                  \r\n                  return pageButtons;\r\n                })()}\r\n                \r\n                {/* Next button - only show when not on last page */}\r\n                {currentPage < totalPages && (\r\n                  <button\r\n                    onClick={nextPage}\r\n                    className=\"px-4 py-2 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 hover:scale-105 transition-all duration-300 hover:shadow-md\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Last button - only show when not on last page AND before or on page 24 */}\r\n                {currentPage < totalPages && currentPage <= 24 && (\r\n                  <button\r\n                    onClick={() => paginate(totalPages)}\r\n                    className=\"px-4 py-2 rounded-full border border-gray-300 bg-white text-gray-700 hover:bg-gray-100 hover:scale-105 transition-all duration-300 hover:shadow-md\"\r\n                  >\r\n                    Last »\r\n                  </button>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Page info */}\r\n              <div className=\"text-gray-600 text-sm\">\r\n                Page {currentPage} of {totalPages}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center text-white py-8\">\r\n          No recipes found matching your search.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(RecipesPage);"],"names":["RecipeCard","React","_ref","recipe","onToggleFavorite","onCardClick","handleToggle","useCallback","e","stopPropagation","id","handleClick","_jsx","className","children","_jsxs","src","image","alt","title","loading","onClick","isFavorite","xmlns","viewBox","fill","fillRule","d","clipRule","RecipesPage","isAuthenticated","isLoading","authLoading","useAuth","navigate","useNavigate","location","useLocation","searchQuery","setSearchQuery","useState","allRecipes","setAllRecipes","setLoading","currentPage","setCurrentPage","useEffect","async","recipeItems","recipes","getAll","data","map","recipe_id","image_url","error","console","fetchRecipes","key","handleToggleFavorite","toggleFavorite","prev","handleCardClick","handleSearchChange","target","value","filteredRecipes","useMemo","filter","toLowerCase","includes","paginatedRecipes","indexOfLastRecipe","indexOfFirstRecipe","slice","totalPages","Math","ceil","length","paginate","pageNumber","nextPage","min","prevPage","max","stroke","strokeLinecap","strokeLinejoin","strokeWidth","type","placeholder","onChange","_Fragment","pageButtons","halfVisible","floor","maxVisibleButtons","startPage","endPage","i","push"],"sourceRoot":""}